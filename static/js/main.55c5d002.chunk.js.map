{"version":3,"sources":["Media/en-tete.png","Components/Header.js","Components/Footer.js","Components/Body.js","Components/MainMenu.js","Components/Login.js","Components/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","headerStyle","gridArea","Header","style","className","src","logo","alt","footerStyle","backgroundColor","Footer","proStyle","userStyle","Body","Fragment","class","href","navbarStyle","width","position","display","gridTemplateColumns","homeStyle","marginRight","marginLeft","gridColumnStart","gridColumnEnd","loginStyle","searchStyle","color","padding","paddingBottom","MainMenu","margin","marginTop","Login","type","placeholder","required","Search","App","exact","path","render","props","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55c5d002.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/en-tete.b9c40e83.png\";","import React from 'react';\r\nimport logo from \"./../Media/en-tete.png\";\r\n\r\n\r\nfunction Header()\r\n{\r\n    return(\r\n        <header style={headerStyle} className=\"\">\r\n           \r\n           <img className=\"img-fluid\" src = {logo} alt=\"en-tete\"></img>\r\n        </header>\r\n    );\r\n}\r\n\r\n\r\n// const headerStyle ={\r\n//     backgroundColor: 'white',\r\n//     width: '100%',\r\n//     display: 'block'\r\n// }\r\nconst headerStyle = {\r\n    gridArea : 'header'\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\n\r\n\r\nfunction Footer()\r\n{\r\n    return(\r\n        <footer style={footerStyle} className=\"\">\r\n           <ul>\r\n               <li>Adresse : Akbou-Bejaia</li>\r\n               <li>Tel: 000000000</li>\r\n               <li>email : contact@infotoolssolutions.com</li>\r\n           </ul>\r\n        </footer>\r\n    );\r\n}\r\n\r\nconst footerStyle={\r\n    backgroundColor: '#DDDDDD',\r\n    \r\n    gridArea: 'footer'\r\n    \r\n}\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction Body()\r\n{\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"card\" style={proStyle}>\r\n                <div class=\"card-header\">\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Je suis un professionnel</h5>\r\n                    <p className=\"card-text\">\r\n                        Se connecter<br/>\r\n                        Editer mon profile <br/>\r\n                        Gerer mon calendrier<br/>\r\n                    </p>\r\n                    <a href=\"#\" className=\"btn btn-primary\">Commencer</a>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card\" style={userStyle}>\r\n                <div class=\"card-header\">\r\n\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Prendre un rendez-vous</h5>\r\n                    <p className=\"card-text\">\r\n                        Se connecter <br/>\r\n                        Trouver un professionnel<br/>\r\n                        Reserver un crenau<br/>\r\n                    </p>\r\n                    <a href=\"#\" className=\"btn btn-primary\">Commencer</a>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst proStyle={\r\n    gridArea: 'pro'\r\n}\r\nconst userStyle={\r\n    gridArea: 'user'\r\n}\r\nexport default Body;","import React from 'react';\r\n\r\nfunction MainMenu()\r\n{\r\n    return(\r\n        \r\n        <nav className=\"navbar\" style={navbarStyle}>\r\n\r\n            <a href=\"/\" className=\"nav-item\" style={homeStyle}>Home</a>\r\n            <a href=\"/Login\" className=\"nav-item\" style={loginStyle}>Login</a>\r\n            \r\n            <button href=\"#\" className=\"btn btn-default nav-item\" style={searchStyle} >\r\n                <i className=\"material-icons\">search</i>\r\n            </button>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst navbarStyle = {\r\n    width :'100%',\r\n    // backgroundColor: 'white',\r\n    // boxShadow: '#555555 0px 5px 20px',\r\n    position :'fixed',\r\n    display:'grid',\r\n    gridTemplateColumns  :'5fr 1fr 1fr 1fr'\r\n}\r\nconst homeStyle = {\r\n    marginRight : '10px',\r\n    marginLeft : '10px',\r\n    gridColumnStart:'2',\r\n    gridColumnEnd:\"3\"\r\n    \r\n}\r\nconst loginStyle = {\r\n    marginRight : '10px',\r\n    marginLeft : '10px',\r\n    gridColumnStart:'3',\r\n    gridColumnEnd:\"4\"\r\n    \r\n}\r\nconst searchStyle = {\r\n    color: 'blue',\r\n    padding:\"10px\",\r\n    paddingBottom:'0px',\r\n    gridColumnStart:'4',\r\n    gridColumnEnd:\"5\"\r\n}\r\n\r\nexport default MainMenu;","import React from 'react'\r\n\r\nfunction Login()\r\n{\r\n    return(\r\n        <div style={loginStyle}>\r\n            <form  >\r\n                <div className=\"form-group\">\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Email Address or Username\" required></input>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\" class=\"form-control\" placeholder=\"Password\" required></input>\r\n                </div>\r\n                \r\n                <button type=\"submit\" class=\"btn btn-success\">Connexion</button>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst loginStyle ={\r\n    margin:'auto',\r\n    marginTop: '100px',\r\n    width:\"40%\"\r\n \r\n};\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nfunction Search()\r\n{\r\n    return(\r\n        <div style={searchStyle}>\r\n            <form>\r\n                <input type=\"text\" placeholder=\"Ville\"></input>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst searchStyle = {\r\n    backgroundColor:'#ff0000',\r\n    gridArea : 'search'\r\n}\r\nexport default Search;","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport Header from './Components/Header';\r\nimport Footer from './Components/Footer';\r\nimport Body from './Components/Body';\r\n\r\nimport MainMenu from './Components/MainMenu';\r\nimport Login from './Components/Login';\r\nimport Search from './Components/Search';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"App\">\r\n      \r\n      {/**page d'accueil */}\r\n      <Route exact path=\"/\" render={props => (\r\n        <React.Fragment>\r\n          <MainMenu></MainMenu>\r\n          <Header />\r\n          <Search/>\r\n          <Body />\r\n          <Footer />\r\n        </React.Fragment>\r\n      )}/>\r\n\r\n      {/*la page de connexion, pro ou non */}\r\n      <Route path=\"/Login\" render={props =>(\r\n        <React.Fragment>\r\n          <MainMenu></MainMenu>\r\n          <Login></Login>\r\n        </React.Fragment>\r\n      )} />\r\n\r\n\r\n\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}