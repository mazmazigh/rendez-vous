{"version":3,"sources":["Media/en-tete.png","logo.svg","Components/Header/Header.js","Components/Footer/Footer.js","Components/Body/Body.js","Components/MainMenu/MainMenu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","Footer","Body","class","href","MainMenu","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAOC,QAAU,IAA0B,qC,yECA3CD,EAAOC,QAAU,IAA0B,kC,2MCa5BC,MATf,WAEI,OACI,yBAAKC,UAAU,+BACZ,yBAAKA,UAAU,YAAYC,IAAOC,IAAMC,IAAI,c,MCIxCC,MATf,WAEI,OACI,yBAAKJ,UAAU,iC,MC+CRK,MAhDf,WAEI,OACI,yBAAKL,UAAU,6BACX,kBAAC,EAAD,MAEI,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACf,yBAAKA,UAAU,YACX,yBAAKA,UAAU,QACX,yBAAKM,MAAM,gBAEX,yBAAKN,UAAU,aACX,wBAAIA,UAAU,cAAd,4BACA,uBAAGA,UAAU,aAAb,eACgB,6BADhB,sBAEuB,6BAFvB,uBAGwB,8BAExB,uBAAGO,KAAK,IAAIP,UAAU,mBAAtB,gBAKZ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,QACX,yBAAKM,MAAM,gBAGX,yBAAKN,UAAU,aACX,wBAAIA,UAAU,cAAd,0BACA,uBAAGA,UAAU,aAAb,gBACiB,6BADjB,2BAE4B,6BAF5B,qBAGsB,8BAEtB,uBAAGO,KAAK,IAAIP,UAAU,mBAAtB,mB,MCvBjBQ,MAff,WAEI,OACI,yBAAKR,UAAU,6BACX,yBAAKA,UAAU,UAEZ,uBAAGA,UAAU,YAAb,QACA,uBAAGA,UAAU,YAAb,UACA,uBAAGA,UAAU,YAAb,cCmBAS,MAtBf,WACE,OACE,yBAAKT,UAAU,OAEb,4BAAQA,UAAU,8BAChB,kBAAC,EAAD,OAGF,kBAAC,EAAD,MAMC,gCACE,kBAAC,EAAD,SCXWU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d0777c54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/en-tete.b9c40e83.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\r\nimport './Header.css';\r\nimport logo from \"./../../Media/en-tete.png\";\r\n\r\nfunction Header()\r\n{\r\n    return(\r\n        <div className=\"main-header container-fluid\">\r\n           <img className=\"img-fluid\" src = {logo} alt=\"en-tete\"></img>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer()\r\n{\r\n    return(\r\n        <div className=\"main-footer container-fluid\">\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './Body.css';\r\nimport Header from '../Header/Header';\r\nimport logo from './../../Media/en-tete.png';\r\n\r\nfunction Body()\r\n{\r\n    return(\r\n        <div className=\"main-body container-fluid\">\r\n            <Header></Header>\r\n            \r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-1\"></div>\r\n                    <div className=\"col-sm-5\">\r\n                        <div className=\"card\">\r\n                            <div class=\"card-header\">\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Je suis un professionnel</h5>\r\n                                <p className=\"card-text\">\r\n                                    Se connecter<br/>\r\n                                    Editer mon profile <br/>\r\n                                    Gerer mon calendrier<br/>\r\n                                </p>\r\n                                <a href=\"#\" className=\"btn btn-primary\">Commencer</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-5\">\r\n                        <div className=\"card\">\r\n                            <div class=\"card-header\">\r\n    \r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Prendre un rendez-vous</h5>\r\n                                <p className=\"card-text\">\r\n                                    Se connecter <br/>\r\n                                    Trouver un professionnel<br/>\r\n                                    Reserver un crenau<br/>\r\n                                </p>\r\n                                <a href=\"#\" className=\"btn btn-primary\">Commencer</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\nimport './MainMenu.css';\r\n\r\nfunction MainMenu()\r\n{\r\n    return(\r\n        <div className=\"container-fluid main-menu\">\r\n            <nav className=\"navbar\">\r\n\r\n               <a className=\"nav-item\">Home</a>\r\n               <a className=\"nav-item\">Search</a>\r\n               <a className=\"nav-item\">Profile</a>\r\n            </nav>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainMenu;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Header from './Components/Header/Header';\r\nimport Footer from './Components/Footer/Footer';\r\nimport Body from './Components/Body/Body';\r\nimport MainMenu from './Components/MainMenu/MainMenu';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <header className=\"App-header container-fluid\">\r\n        <MainMenu></MainMenu>\r\n      </header>\r\n      \r\n      <Body/>\r\n\r\n\r\n\r\n\r\n\r\n       <footer>\r\n         <Footer/>\r\n       </footer>\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}